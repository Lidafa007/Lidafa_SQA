I have read the content of chapter 16 and chapter 17. I learned a lot about testing and
other QA alternatives. My pairwise comparison between Testing and other QA alternatives
are as below:


1. Tesing VS Defect prevention

    Different applicability to maintenance
    Objects QA activities applied on
        testing executable code
        defect prevention on(implementation related) dev. activities
    Different development phases
        tesing on testing phase and later
        defect prevention on (req/spec/design/coding)
    General expertise levels
        tesing-low
        defect prevention-medium
    Problem or defect types
        tesing : dynamic failures & related faults
        defect prevention: negating causes or pre-conditions to pervasive problems
    Ease of result interpretation: Moderate/intangible
    Cost: tesing is medium /defect prevention is low
    
2. Tesing VS Formal verification
    
    Tesing is important link in dev. process
    Defect situations
        tesing : Medium/low
        formal verification : Low/no
    Cost: tesing-moderate / formal verification-high
    Different development phases
    
3. Tesing VS Fault tolerance

    Problem or defect types
        tesing : Dynamic/run-time/interaction problems
        fault tolerance : Dynamic problems (must be rare)
    Moderate cost / High cost & reliability (low defect)
    General expertise levels
        tesing : low - high
        fault tolerance : high , need specific background knowledge- Dynamic system
    Applied on specific objects
        testing : executable code
        fault tolerance : operational software system
    
4. Tesing VS Failure containment

    Moderate cost / Extremely high cost
        failure containment applys only when safety matters
    Process/technology intensive
    Effectiveness
        tesing for failures
        failure containment : rare accidents
    Ease of result interpretation
        tesing : moderate
        failure containment: hard
    Expertise levels : Tesing is low / Failure containment is high
        failure containment need specific background knowledge——safety,embedded systems
        
That's all.        
